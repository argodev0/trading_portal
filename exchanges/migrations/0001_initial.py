# Generated by Django 4.2.23 on 2025-06-27 23:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the cryptocurrency exchange', max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Exchange',
                'verbose_name_plural': 'Exchanges',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserAPIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Human-readable name for this API key', max_length=100)),
                ('api_key_public_part', models.CharField(help_text='Public part of the API key (safe to display)', max_length=255)),
                ('encrypted_credentials', models.BinaryField(help_text='Encrypted API credentials (secret key, passphrase, etc.)')),
                ('nonce', models.BinaryField(help_text='Cryptographic nonce used for encryption')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this API key is active and should be used')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exchange', models.ForeignKey(help_text='Exchange this API key belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='user_api_keys', to='exchanges.exchange')),
                ('user', models.ForeignKey(help_text='User who owns this API key', on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User API Key',
                'verbose_name_plural': 'User API Keys',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'exchange', 'name')},
            },
        ),
    ]
