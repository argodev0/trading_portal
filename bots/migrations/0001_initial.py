# Generated by Django 4.2.23 on 2025-06-28 00:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exchanges', '0002_alter_userapikey_api_key_public_part_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='User-friendly name for the bot', max_length=100)),
                ('strategy', models.CharField(choices=[('grid', 'Grid Trading'), ('dca', 'Dollar Cost Averaging'), ('scalping', 'Scalping'), ('momentum', 'Momentum Trading'), ('mean_reversion', 'Mean Reversion'), ('arbitrage', 'Arbitrage'), ('custom', 'Custom Strategy')], help_text='Trading strategy to use', max_length=20)),
                ('pair', models.CharField(help_text='Trading pair (e.g., BTC/USDT, ETH/BTC)', max_length=20)),
                ('timeframe', models.CharField(choices=[('1m', '1 Minute'), ('5m', '5 Minutes'), ('15m', '15 Minutes'), ('30m', '30 Minutes'), ('1h', '1 Hour'), ('4h', '4 Hours'), ('1d', '1 Day'), ('1w', '1 Week')], default='1h', help_text='Timeframe for strategy execution', max_length=5)),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Strategy-specific parameters (JSON format)')),
                ('status', models.CharField(choices=[('inactive', 'Inactive'), ('active', 'Active'), ('paused', 'Paused'), ('error', 'Error')], default='inactive', help_text='Current status of the bot', max_length=10)),
                ('is_active', models.BooleanField(default=False, help_text='Whether the bot is currently running')),
                ('max_daily_trades', models.PositiveIntegerField(default=10, help_text='Maximum number of trades per day', validators=[django.core.validators.MinValueValidator(1)])),
                ('risk_percentage', models.DecimalField(decimal_places=2, default=1.0, help_text='Risk percentage per trade (0.01-100.00)', max_digits=5, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exchange_key', models.ForeignKey(help_text='API key to use for trading on the exchange', on_delete=django.db.models.deletion.CASCADE, related_name='bots', to='exchanges.userapikey')),
                ('user', models.ForeignKey(help_text='User who owns this bot', on_delete=django.db.models.deletion.CASCADE, related_name='bots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bot',
                'verbose_name_plural': 'Bots',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BotRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(auto_now_add=True, help_text='When the bot run was started')),
                ('end_time', models.DateTimeField(blank=True, help_text='When the bot run was stopped', null=True)),
                ('status', models.CharField(choices=[('starting', 'Starting'), ('running', 'Running'), ('stopping', 'Stopping'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='starting', help_text='Current status of this bot run', max_length=15)),
                ('trades_executed', models.PositiveIntegerField(default=0, help_text='Number of trades executed during this run')),
                ('profit_loss', models.DecimalField(decimal_places=8, default=0.0, help_text='Profit/Loss for this run (in base currency)', max_digits=15)),
                ('error_message', models.TextField(blank=True, help_text='Error message if the run failed')),
                ('logs', models.JSONField(blank=True, default=list, help_text='Execution logs and events (JSON array)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bot', models.ForeignKey(help_text='Bot that this run belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='bots.bot')),
            ],
            options={
                'verbose_name': 'Bot Run',
                'verbose_name_plural': 'Bot Runs',
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['bot', '-start_time'], name='bots_botrun_bot_id_f2b25e_idx'), models.Index(fields=['status'], name='bots_botrun_status_e57da2_idx'), models.Index(fields=['start_time'], name='bots_botrun_start_t_a31ffc_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='bot',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='unique_bot_name_per_user'),
        ),
    ]
